Composite and Collection value type mappings
-   Provide mapping metadata for a composite value type
-   Map a collection of basic value types
-   Map a collection of composite value types

Composite Value Types
-   A composite type is a group of fields stored in one class that we then embed within an entity.
-   Represent a group of values in a single Java type.
-   Embedded (JPA) / Composite Type (Hibernate).
-   Do not confuse with entity.
-   Does not have an id or table.
-   Only persisted or queried in teh context of its parent.
-   Data is embedded in the source object's table.
-   Need a @Embeddable annotation in the composite class (JPA annotation).

Collection Value Types
-   @Table(name="BANK")
    public class Bank {
        private List<String> contacts = new LinkedList<String>();
    }
-   Can define a collection of basic or composite value types.
-   When we map these collection types to the database they need to have their own table.
-   Target objects cannot be queried, persisted, merged independently of their parent object.
-   The BANK_CONTACT table we don't have a unique identifier for BANK_CONTACT. It's keyed on the BANK_ID value and that
    defines the identify of the bank contact table. So it borrows that from the entity it is stored within.
